{"version":3,"sources":["components/moviedisplay.js","components/searchbar.js","App.js","reportWebVitals.js","index.js"],"names":["MovieDisplay","moviedata","movie","console","log","className","src","poster_path","alt","title","release_date","overview","SearchBar","useState","setsearchvalue","movieresults","setmovieresults","type","class","onChange","e","preventDefault","target","value","fetch","then","response","json","data","errors","results","length","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMA6BeA,MA3Bf,SAAsBC,GAElB,IAAMC,EAAMD,EAAUA,UAEtB,OADAE,QAAQC,IAAIH,GAEZ,sBAAKI,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACA,qBAAKA,UAAU,MAAMC,IAAG,yCAAoCJ,EAAMK,aAAeC,IAAKN,EAAMO,QAC5F,sBAAKJ,UAAU,WAAf,UACA,oBAAIA,UAAU,QAAd,SAAuBH,EAAMO,QAC7B,6BAMA,sBAAKJ,UAAU,eAAf,UAEI,oBAAGA,UAAU,WAAb,UAAwB,qDAAiCH,EAAMQ,gBAC/D,uBACA,oBAAGL,UAAU,WAAb,UAAwB,iDAAxB,IAAqD,uBAAOH,EAAMS,YAClE,8BCyBGC,MA5Cf,WAEI,MAAmCC,mBAAS,KAA5C,mBAAmBC,GAAnB,WACA,EAAoCD,mBAAS,IAA7C,mBAAME,EAAN,KAAmBC,EAAnB,KAwBA,OACI,sBAAKX,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAf,SACA,uBAAOY,KAAK,OAAOC,MAAM,SAASC,SA1BvB,SAACC,GAChBA,EAAEC,iBACFP,EAAeM,EAAEE,OAAOC,OACxBpB,QAAQC,IAAIgB,EAAEE,OAAOC,OACrBC,MAAM,4FAAD,OAA6FJ,EAAEE,OAAOC,MAAtG,gCACJE,MAAK,SAACC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GAECA,EAAKC,OAMTb,EAAgB,IAJhBA,EAAgBY,EAAKE,iBAgBhBf,EAAagB,OAAO,GACrBhB,EAAaiB,KAAI,SAAC9B,GAAD,OACb,cAAC,EAAD,CAAcD,UAAWC,WCxB9B+B,MAVf,WAEE,OACE,qBAAK5B,UAAU,OAAf,SACE,cAAC,EAAD,OCIS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.47c7f892.chunk.js","sourcesContent":["\r\n\r\nfunction MovieDisplay(moviedata)\r\n{\r\n    const movie=moviedata.moviedata\r\n    console.log(moviedata)\r\n    return(\r\n    <div className=\"moviecard\">\r\n        <div className=\"moviepos\">\r\n        <img className=\"pos\" src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={movie.title} />\r\n        <div className=\"titlediv\">\r\n        <h1 className=\"title\">{movie.title}</h1>\r\n        <hr />\r\n\r\n        </div>\r\n        \r\n        </div>\r\n       \r\n        <div className=\"moviedescard\">\r\n            \r\n            <p className=\"moviedes\"><strong>Release Date - </strong>{movie.release_date}</p>\r\n            <hr />\r\n            <p className=\"moviedes\"><strong>Description</strong> <br />{movie.overview}</p>\r\n            <hr />\r\n        </div>\r\n         \r\n    </div>\r\n    )\r\n}\r\nexport default MovieDisplay;","\r\nimport { useState } from 'react';\r\nimport MovieDisplay from './moviedisplay';\r\n\r\nfunction SearchBar()\r\n{\r\n    const [searchvalue,setsearchvalue]=useState(\" \");\r\n    const[movieresults,setmovieresults]=useState([]);\r\n    const searchChange=(e)=>{\r\n        e.preventDefault();\r\n        setsearchvalue(e.target.value);\r\n        console.log(e.target.value)\r\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=56665026e3870c33d4fef3747976d333&query=${e.target.value}&page=1&include_adult=false`)\r\n        .then((response)=>{\r\n            return response.json();\r\n        })\r\n        .then((data)=>{\r\n\r\n            if(!data.errors)\r\n        {\r\n            setmovieresults(data.results);\r\n        }\r\n        else\r\n        {\r\n            setmovieresults([])\r\n        }\r\n        \r\n        })\r\n        \r\n        \r\n    } \r\n    return(\r\n        <div className=\"searchbar\">\r\n            <div className=\"searchdiv\">\r\n            <input type=\"text\" class=\"search\" onChange={searchChange} />\r\n            </div>\r\n                {movieresults.length>0 &&(\r\n                movieresults.map((movie)=>(\r\n                    <MovieDisplay moviedata={movie} />\r\n                ))\r\n\r\n                )}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\nimport './App.css';\nimport {useState,useEffect} from 'react';\nimport SearchBar from './components/searchbar.js';\nfunction App() {\n  \n  return (\n    <div className=\"Main\">\n      <SearchBar />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}